# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def isSymmetric(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        if not root: return True
        
        stack = []
        stack.append((root.left, root.right))
        while stack:
            left_node, right_node = stack.pop()
            if not left_node and right_node: return False
            if not right_node and left_node: return False
            
            if left_node and right_node:
                if left_node.val!=right_node.val: return False
                stack.append((left_node.right, right_node.left))
                stack.append((left_node.left, right_node.right))
        return True
